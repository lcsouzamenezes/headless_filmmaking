; Generated by AutoGUI 2.5.8
#SingleInstance Force
#NoEnv
SetWorkingDir %A_ScriptDir%
SetBatchLines -1

; NOTES, uses copyTime.lua to copy timeline to clipboard for
; IN and OUT video trim points.
; https://github.com/Arieleg/mpv-copyTime/blob/master/copyTime.lua

; AHK v2 requires quote around file names for ffmpeg and for run command filename

global pid_mpv
global title_mpv
global TL_x :=0, TL_y :=0, BR_x :=0, BR_y :=0, ThisWin_H, ThisWin_W
global VLC_Filename :=""
global str_ffmpeg
global GUI_width
global GUI_height
GUI_width := 800
GUI_height := 240

MakeGui:
Gui +hWndhGUITrimmer
;Gui, GuiTrimmer:New
Gui Add, Button, gMark_IN x20 y0 w80 h30, Mark &In
Gui Add, Button, gMark_OUT x114 y0 w80 h30, Mark &OUT
Gui Add, Button, hWndhBtnReset5 gReset x207 y0 w80 h30, &Reset
;ControlColor(hBtnReset5, hMainWnd, 0xFFFF00)
Gui Add, Text, x20 y40 w29 h30 +0x200, IN:
Gui Add, Edit, vIN x51 y40 w200 h30 
Gui Add, Text, x260 y40 w52 h30 +0x200, OUT:
Gui Add, Edit, vOUT x320 y40 w200 h30 

Gui Add, Button, gGetVideoFilename x20 y79 w200 h30, Get Video's Filename
Gui Add, Text, x257 y84 w74 h23 +0x200, Filename:
Gui Add, Edit, x336 y80 w450 h30 vVidFilename -VScroll

Gui Add, Edit, x23 y120 w741 h60 -VScroll vedit_ffmpeg, ffmpeg...

; LAST ROW
Gui Add, Button, gSaveOpenTimelineIO x20 y190 w261 h30, Save In/Outs OpenTimeLineIO
Gui Add, Button, gProcess x590 y190 w80 h30, &Process
Gui Add, Button, gffMPEG_Transcode x300 y190 w110 h30, ffMPEG_Transcode
Gui Add, Edit, vFileSuffix x440 y190 w120 h30 -VScroll
; for adding functionality, testing
;Gui Add, Button, gTest2 x386 y190 w60 h30, Test2
;Gui Add, Button, gTest3 x460 y190 w60 h30, Test3
Gui Add, Button, gQuit x709 y190 w80 h30, E&xit
Gui Font, s16 Bold
Gui Add, Text, x3 y-2 w16 h46 +0x200, ^

Gui Show, w%GUI_width% h%GUI_height%, GUIMark ;IN and OUT Points

Return

; ******** MARK IN **********
Mark_IN(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
;WinGetTitle, pid_title, ahk_pid %pid_mpv%
Clipboard :=
WinActivate, ahk_pid %pid_mpv% ; should work
sleep 250
Send {ctrl down}c{ctrl up}
sleep 500
WinActivate, %GUIMark%
GuiControl,,IN,%Clipboard%
}
; ******** MARK OUT **********
Mark_OUT(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
Clipboard :=
WinActivate, ahk_pid %pid_mpv% ; should work
sleep 250
Send {ctrl down}c{ctrl up}
sleep 500
WinActivate, %GUIMark%
GuiControl,,OUT,%Clipboard%

; Now let's create ffmpeg command
; Same as ffmpeg_IT button command
guicontrolget, IN,, IN
guicontrolget, OUT,, OUT
cleanIN := RegExReplace(IN,"\.? *(\n|\r)+","")
cleanOUT := RegExReplace(OUT,"\.? *(\n|\r)+","")

guicontrolget, VidFilename,,VidFilename
StringReplace source_file, VidFilename, _TLproxy,
StringReplace target_file, VidFilename, _TLproxy,_trimmed

guicontrolget, FileSuffix,,FileSuffix
SplitPath, source_file,, source_folder
target_file_transcode = %source_folder%\%FileSuffix%.mp4

; COPY
str_ffmpeg = ffmpeg -ss %cleanIN% -to %cleanOUT% -i "%source_file%" -c copy "%target_file%"


; TRANSCODE
; -c:v  libx264 -c:a aac -b:a 128k -y
str_ffmpeg = ffmpeg -ss %cleanIN% -to %cleanOUT% -i "%source_file%" -c:v libx264 -c:a aac -b:a 128k -y "%target_file_transcode%"

GuiControl,,edit_ffmpeg,%str_ffmpeg% ;%Clipboard%

}
Get_OCR_TL(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}
Get_OCR_BR(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}
Reset(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}
SaveOpenTimelineIO(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}
GetVideoFilename(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}
Process(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
RunWait, %comspec% /k %str_ffmpeg%
}

; *************
; TRANSCODE
; *************
ffMPEG_Transcode(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
;guicontrolget, IN,, IN
;guicontrolget, OUT,, OUT
;cleanIN := RegExReplace(IN,"\.? *(\n|\r)+","")
;cleanOUT := RegExReplace(OUT,"\.? *(\n|\r)+","")

;guicontrolget, VidFilename,,VidFilename
;StringReplace source_file, VidFilename, _TLproxy,
;StringReplace target_file, VidFilename, _TLproxy,_trimmed

;GuiControl,,edit_ffmpeg,%str_ffmpeg% ;%Clipboard%

RunWait, %comspec% /k %str_ffmpeg%

}

Test2(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}

Test3(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}
Quit(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {

ExitApp

}
PreviewOCRBox(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}

; ***********************
; *** DROP VIDEO FILE ***
; ***********************
GuiDropFiles:
{
GuiControl,,VidFilename,%A_GuiEvent% 

MPV_Filename := A_GuiEvent

Run C:\Max_Software\MPV\mpv.exe  "%MPV_Filename%" --geometry=800x600,,, pid_mpv
WinWait % "ahk_pid" pid_mpv

WinGetTitle, pid_title, ahk_pid %pid_mpv%

WinGetPos, X, Y, Width, Height, ahk_pid %pid_mpv%
x_MPV := X
y_MPV := Y
width_MPV := Width
height_MPV := Height

WinActivate, %GUIMark%
WinWait, %GUIMark%
WinGetPos, X, Y, Width, Height, %GUIMark%
x_GUI := X
y_GUI := Y
width_GUI := Width * (A_ScreenDPI/96)
height_GUI := Height * (A_ScreenDPI/96)

; If move MPV above GUI
x_GUI_move := round(x_GUI + ((Width - width_MPV)/2),0)
WinMove, %pid_title%, ,x_GUI_move, y_MPV - height_MPV + 100

; if Move GUI around player
;x_MPV_move := round(x_MPV + ((width_MPV - width_GUI)/2),0)
;WinMove, GUIMark, ,x_MPV_move, y_MPV + 600 +50

}
return

Return

GuiEscape:
GuiClose:
    ExitApp
